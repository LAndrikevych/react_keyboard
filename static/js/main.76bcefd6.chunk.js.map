{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","key","event","setState","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAyB,CACvBC,WAAY,2BAFhB,EAaEC,IAAM,SAACC,GACa,MAAdA,EAAMD,IACR,EAAKE,SAAS,CAAEH,WAAY,sCAE5B,EAAKG,SAAS,CAAEH,WAAW,6BAAD,OAA+BE,EAAMD,IAArC,SAjBhC,uDAKE,WACEG,SAASC,iBAAiB,QAASC,KAAKL,OAN5C,kCASE,WACEG,SAASG,oBAAoB,QAASD,KAAKL,OAV/C,oBAqBE,WACE,OACE,qBAAKO,UAAU,MAAf,SACE,4BACGF,KAAKP,MAAMC,mBAzBtB,GAAyBS,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.76bcefd6.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  pressedKey: string,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    pressedKey: 'Nothing was pressed yet',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.key);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.key);\n  }\n\n  key = (event: KeyboardEvent) => {\n    if (event.key === ' ') {\n      this.setState({ pressedKey: 'The last pressed key is [ Space ]' });\n    } else {\n      this.setState({ pressedKey: `The last pressed key is [ ${event.key} ]` });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p>\n          {this.state.pressedKey}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}